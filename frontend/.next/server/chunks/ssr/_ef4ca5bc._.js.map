{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///app/app/create-short-link/actions.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { z } from \"zod\";\r\n\r\n// URL validation regex\r\nconst URL_REGEX =\r\n  /^https?:\\/\\/(?:[-\\w.])+(?::[0-9]+)?(?:\\/(?:[\\w/_.])*(?:\\?(?:[\\w&=%.])*)?(?:#(?:[\\w.])*)?)?$/;\r\n\r\nconst CreateShortLinkSchema = z.object({\r\n  originalUrl: z\r\n    .string()\r\n    .min(1, \"Original URL is required\")\r\n    .regex(\r\n      URL_REGEX,\r\n      \"Please enter a valid URL (must start with http:// or https://)\"\r\n    ),\r\n  alias: z\r\n    .string()\r\n    .max(20, \"Alias must be 20 characters or less\")\r\n    .optional()\r\n    .or(z.literal(\"\")),\r\n  expiresAt: z.string().optional().or(z.literal(\"\")),\r\n});\r\n\r\ntype FormState = {\r\n  success: boolean;\r\n  message: string;\r\n  shortUrl: string;\r\n  errors: Record<string, string>;\r\n};\r\n\r\nexport async function createShortLink(\r\n  prevState: FormState,\r\n  formData: FormData\r\n): Promise<FormState> {\r\n  const rawData = {\r\n    originalUrl: formData.get(\"originalUrl\") as string,\r\n    alias: formData.get(\"alias\") as string,\r\n    expiresAt: formData.get(\"expiresAt\") as string,\r\n  };\r\n\r\n  // Validate with Zod\r\n  const validationResult = CreateShortLinkSchema.safeParse(rawData);\r\n\r\n  if (!validationResult.success) {\r\n    const errors: Record<string, string> = {};\r\n    validationResult.error.errors.forEach((error) => {\r\n      if (error.path[0]) {\r\n        errors[error.path[0] as string] = error.message;\r\n      }\r\n    });\r\n\r\n    return {\r\n      success: false,\r\n      message: \"Please fix the validation errors\",\r\n      shortUrl: \"\",\r\n      errors,\r\n    };\r\n  }\r\n\r\n  const { originalUrl, alias, expiresAt } = validationResult.data;\r\n\r\n  try {\r\n    const backBaseUrl = process.env.BACK_BASE_URL || \"http://localhost:3000\";\r\n\r\n    // Prepare request body\r\n    const requestBody: any = {\r\n      originalUrl,\r\n    };\r\n\r\n    if (alias && alias.trim()) {\r\n      requestBody.alias = alias.trim();\r\n    }\r\n\r\n    if (expiresAt && expiresAt.trim()) {\r\n      requestBody.expiresAt = expiresAt;\r\n    }\r\n\r\n    const response = await fetch(`${backBaseUrl}/shorten`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(requestBody),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      return {\r\n        success: true,\r\n        message: \"Short link created successfully!\",\r\n        shortUrl: data.shortUrl,\r\n        errors: {},\r\n      };\r\n    } else {\r\n      // Handle error responses\r\n      return {\r\n        success: false,\r\n        message:\r\n          data.message || \"An error occurred while creating the short link\",\r\n        shortUrl: \"\",\r\n        errors: {},\r\n      };\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error creating short link:\", error);\r\n    return {\r\n      success: false,\r\n      message: \"Network error. Please try again.\",\r\n      shortUrl: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAAA;;;;;AAEA,uBAAuB;AACvB,MAAM,YACJ;AAEF,MAAM,wBAAwB,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,aAAa,iLAAA,CAAA,IAAC,CACX,MAAM,GACN,GAAG,CAAC,GAAG,4BACP,KAAK,CACJ,WACA;IAEJ,OAAO,iLAAA,CAAA,IAAC,CACL,MAAM,GACN,GAAG,CAAC,IAAI,uCACR,QAAQ,GACR,EAAE,CAAC,iLAAA,CAAA,IAAC,CAAC,OAAO,CAAC;IAChB,WAAW,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,EAAE,CAAC,iLAAA,CAAA,IAAC,CAAC,OAAO,CAAC;AAChD;AASO,eAAe,gBACpB,SAAoB,EACpB,QAAkB;IAElB,MAAM,UAAU;QACd,aAAa,SAAS,GAAG,CAAC;QAC1B,OAAO,SAAS,GAAG,CAAC;QACpB,WAAW,SAAS,GAAG,CAAC;IAC1B;IAEA,oBAAoB;IACpB,MAAM,mBAAmB,sBAAsB,SAAS,CAAC;IAEzD,IAAI,CAAC,iBAAiB,OAAO,EAAE;QAC7B,MAAM,SAAiC,CAAC;QACxC,iBAAiB,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACrC,IAAI,MAAM,IAAI,CAAC,EAAE,EAAE;gBACjB,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE,CAAW,GAAG,MAAM,OAAO;YACjD;QACF;QAEA,OAAO;YACL,SAAS;YACT,SAAS;YACT,UAAU;YACV;QACF;IACF;IAEA,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,iBAAiB,IAAI;IAE/D,IAAI;QACF,MAAM,cAAc,QAAQ,GAAG,CAAC,aAAa,IAAI;QAEjD,uBAAuB;QACvB,MAAM,cAAmB;YACvB;QACF;QAEA,IAAI,SAAS,MAAM,IAAI,IAAI;YACzB,YAAY,KAAK,GAAG,MAAM,IAAI;QAChC;QAEA,IAAI,aAAa,UAAU,IAAI,IAAI;YACjC,YAAY,SAAS,GAAG;QAC1B;QAEA,MAAM,WAAW,MAAM,MAAM,GAAG,YAAY,QAAQ,CAAC,EAAE;YACrD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,SAAS,EAAE,EAAE;YACf,OAAO;gBACL,SAAS;gBACT,SAAS;gBACT,UAAU,KAAK,QAAQ;gBACvB,QAAQ,CAAC;YACX;QACF,OAAO;YACL,yBAAyB;YACzB,OAAO;gBACL,SAAS;gBACT,SACE,KAAK,OAAO,IAAI;gBAClB,UAAU;gBACV,QAAQ,CAAC;YACX;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;YACL,SAAS;YACT,SAAS;YACT,UAAU;YACV,QAAQ,CAAC;QACX;IACF;AACF;;;IAnFsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///app/.next-internal/server/app/create-short-link/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {createShortLink as '60170aceced318ea6065c69f60223cfe1936ccb456'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///app/app/create-short-link/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/create-short-link/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/create-short-link/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///app/app/create-short-link/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/create-short-link/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/create-short-link/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}