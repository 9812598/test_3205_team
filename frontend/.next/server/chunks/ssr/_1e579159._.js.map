{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///app/app/create-short-link/actions.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { z } from \"zod\";\r\n\r\n// URL validation regex\r\nconst URL_REGEX =\r\n  /^https?:\\/\\/(?:[-\\w.])+(?::[0-9]+)?(?:\\/(?:[\\w/_.])*(?:\\?(?:[\\w&=%.])*)?(?:#(?:[\\w.])*)?)?$/;\r\n\r\nconst CreateShortLinkSchema = z.object({\r\n  originalUrl: z\r\n    .string()\r\n    .min(1, \"Original URL is required\")\r\n    .regex(\r\n      URL_REGEX,\r\n      \"Please enter a valid URL (must start with http:// or https://)\"\r\n    ),\r\n  alias: z\r\n    .string()\r\n    .max(20, \"Alias must be 20 characters or less\")\r\n    .optional()\r\n    .or(z.literal(\"\")),\r\n  expiresAt: z.string().optional().or(z.literal(\"\")),\r\n});\r\n\r\ntype FormState = {\r\n  success: boolean;\r\n  message: string;\r\n  shortUrl: string;\r\n  errors: Record<string, string>;\r\n};\r\n\r\nexport async function createShortLink(\r\n  prevState: FormState,\r\n  formData: FormData\r\n): Promise<FormState> {\r\n  const rawData = {\r\n    originalUrl: formData.get(\"originalUrl\") as string,\r\n    alias: formData.get(\"alias\") as string,\r\n    expiresAt: formData.get(\"expiresAt\") as string,\r\n  };\r\n\r\n  // Validate with Zod\r\n  const validationResult = CreateShortLinkSchema.safeParse(rawData);\r\n\r\n  if (!validationResult.success) {\r\n    const errors: Record<string, string> = {};\r\n    validationResult.error.errors.forEach((error) => {\r\n      if (error.path[0]) {\r\n        errors[error.path[0] as string] = error.message;\r\n      }\r\n    });\r\n\r\n    return {\r\n      success: false,\r\n      message: \"Please fix the validation errors\",\r\n      shortUrl: \"\",\r\n      errors,\r\n    };\r\n  }\r\n\r\n  const { originalUrl, alias, expiresAt } = validationResult.data;\r\n\r\n  try {\r\n    const backBaseUrl = process.env.BACK_BASE_URL || \"http://localhost:3000\";\r\n\r\n    // Prepare request body\r\n    const requestBody: any = {\r\n      originalUrl,\r\n    };\r\n\r\n    if (alias && alias.trim()) {\r\n      requestBody.alias = alias.trim();\r\n    }\r\n\r\n    if (expiresAt && expiresAt.trim()) {\r\n      requestBody.expiresAt = expiresAt;\r\n    }\r\n\r\n    const response = await fetch(`${backBaseUrl}/shorten`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(requestBody),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      return {\r\n        success: true,\r\n        message: \"Short link created successfully!\",\r\n        shortUrl: data.shortUrl,\r\n        errors: {},\r\n      };\r\n    } else {\r\n      // Handle error responses\r\n      return {\r\n        success: false,\r\n        message:\r\n          data.message || \"An error occurred while creating the short link\",\r\n        shortUrl: \"\",\r\n        errors: {},\r\n      };\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error creating short link:\", error);\r\n    return {\r\n      success: false,\r\n      message: \"Network error. Please try again.\",\r\n      shortUrl: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;IA+BsB,kBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///app/app/create-short-link/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useActionState } from \"react\";\r\nimport { createShortLink } from \"./actions\";\r\n\r\nexport default function CreateShortLink() {\r\n  const [state, formAction, isPending] = useActionState(createShortLink, {\r\n    success: false,\r\n    message: \"\",\r\n    shortUrl: \"\",\r\n    errors: {},\r\n  });\r\n\r\n  const copyToClipboard = async (text: string) => {\r\n    try {\r\n      if (navigator.clipboard && window.isSecureContext) {\r\n        await navigator.clipboard.writeText(text);\r\n        alert(\"Copied to clipboard!\");\r\n        return;\r\n      }\r\n\r\n      const textArea = document.createElement(\"textarea\");\r\n      textArea.value = text;\r\n      textArea.style.position = \"fixed\";\r\n      textArea.style.left = \"-999999px\";\r\n      textArea.style.top = \"-999999px\";\r\n      document.body.appendChild(textArea);\r\n      textArea.focus();\r\n      textArea.select();\r\n\r\n      const successful = document.execCommand(\"copy\");\r\n      document.body.removeChild(textArea);\r\n\r\n      if (successful) {\r\n        alert(\"Copied to clipboard!\");\r\n      } else {\r\n        throw new Error(\"Copy command failed\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Failed to copy: \", err);\r\n      prompt(\"Copy this URL manually:\", text);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <main>\r\n        <h1 className=\"title\">Create Short Link</h1>\r\n\r\n        {state.success && state.shortUrl && (\r\n          <div className=\"successCard\">\r\n            <div className=\"cardHeader\">Success!</div>\r\n            <p className=\"cardText\">Your short URL has been created:</p>\r\n            <div className=\"urlContainer\">\r\n              <input\r\n                type=\"text\"\r\n                value={state.shortUrl}\r\n                readOnly\r\n                className=\"urlInput\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => copyToClipboard(state.shortUrl)}\r\n                className=\"copyButton\"\r\n              >\r\n                Copy\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {state.message && !state.success && (\r\n          <div className=\"errorCard\">\r\n            <div className=\"cardHeader\">Error</div>\r\n            <p className=\"cardText\">{state.message}</p>\r\n          </div>\r\n        )}\r\n\r\n        <form action={formAction} className=\"form\">\r\n          <fieldset className=\"fieldset\">\r\n            <label className=\"label\">\r\n              <span className=\"labelText\">Original URL *</span>\r\n              <input\r\n                type=\"url\"\r\n                name=\"originalUrl\"\r\n                placeholder=\"https://example.com\"\r\n                required\r\n                className=\"input\"\r\n                aria-invalid={state.errors?.originalUrl ? \"true\" : \"false\"}\r\n              />\r\n              {state.errors?.originalUrl && (\r\n                <span className=\"errorText\">{state.errors.originalUrl}</span>\r\n              )}\r\n            </label>\r\n\r\n            <label className=\"label\">\r\n              <span className=\"labelText\">Custom Alias (optional)</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"alias\"\r\n                placeholder=\"my-custom-alias\"\r\n                maxLength={20}\r\n                className=\"input\"\r\n                aria-invalid={state.errors?.alias ? \"true\" : \"false\"}\r\n              />\r\n              <span className=\"helpText\">Maximum 20 characters</span>\r\n              {state.errors?.alias && (\r\n                <span className=\"errorText\">{state.errors.alias}</span>\r\n              )}\r\n            </label>\r\n\r\n            <label className=\"label\">\r\n              <span className=\"labelText\">Expires At</span>\r\n              <input\r\n                type=\"date\"\r\n                name=\"expiresAt\"\r\n                className=\"input\"\r\n                aria-label=\"Date\"\r\n                aria-invalid={state.errors?.expiresAt ? \"true\" : \"false\"}\r\n              />\r\n              {state.errors?.expiresAt && (\r\n                <span className=\"errorText\">{state.errors.expiresAt}</span>\r\n              )}\r\n            </label>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isPending}\r\n              aria-busy={isPending}\r\n              className=\"submitButton\"\r\n            >\r\n              {isPending ? \"Creating...\" : \"Create Short Link\"}\r\n            </button>\r\n          </fieldset>\r\n        </form>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":["file:///app/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///app/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;;;;;;;;;;;;;;;;;IAEjBA,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,CAACE,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ,8JAAiC,EAC7CL,qBAAqB","ignoreList":[0],"debugId":null}}]
}